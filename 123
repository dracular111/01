setfpscap(5)
task.wait(10)
getgenv().data = {
    ["FPS"] = 5,
    ["Black Screen"] = false,
    ["Disable Gui"] = false,
}
repeat wait() until game:IsLoaded()
local VirtualUser = game:service 'VirtualUser'
game:service('Players').LocalPlayer.Idled:connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

repeat
    wait()
until game:IsLoaded() and
    game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui") and
    game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("MainLeft") and
    game:GetService("Players").LocalPlayer.PlayerGui.MainLeft.Left.Currency.Diamonds.Diamonds.Visible == true and
    not game:GetService("Players").LocalPlayer:FindFirstChild("GUIFX Holder")
local a = require(game:GetService("ReplicatedStorage").Library.Client.MiningCmds.BlockWorldClient)
spawn(function()
    for i, v in workspace.__THINGS.Orbs:GetChildren() do
        local args = {
            [1] = {
                [1] = v.Name
            }
        }

        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Orbs: Collect"):FireServer(unpack(
            args))
    end
end)

repeat
    wait()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(178.87374877929688, 19.111133575439453,
        -140.4659423828125)
    task.wait(1)
until game.Players.LocalPlayer:DistanceFromCharacter(Vector3.new(17093.18359375, 16.20104217529297, -8114.212890625)) <= 100
local save = require(game:GetService("ReplicatedStorage").Library.Client.Save)
local v_u_5 = require(game.ReplicatedStorage.Library.Functions)
local v_u_13 = require(game.ReplicatedStorage.Library.Client.Network)
if getgenv().data["Black Screen"] then
    game:GetService("Lighting").ExposureCompensation = -math.huge
end
setfpscap(getgenv().data["FPS"] or 60)

local am = 0
spawn(function()
    while wait() do
        for i, v in save.Get().Inventory.Misc do
            am = 0
            if string.find(v.id, "Sapphire") then
                am = v._am or 1

                if am >= 16 then
                    if am > 1600 then
                        local args = {
                            [1] = "MiningCraftMachine",
                            [2] = 1,
                            [3] = 100,
                            [4] = {
                                ["shiny"] = false,
                                ["pt"] = 0
                            }
                        }

                        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild(
                            "PetCraftingMachine_Craft")
                            :InvokeServer(unpack(args))
                    else
                        local args = {
                            [1] = "MiningCraftMachine",
                            [2] = 1,
                            [3] = am // 16,
                            [4] = {
                                ["shiny"] = false,
                                ["pt"] = 0
                            }
                        }

                        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild(
                            "PetCraftingMachine_Craft")
                            :InvokeServer(unpack(args))
                    end
                end
            end
            if string.find(v.id, "Ruby") then
                am = v._am or 1

                if am >= 16 then
                    if am > 1600 then
                        local args = {
                            [1] = "MiningCraftMachine",
                            [2] = 2,
                            [3] = 100,
                            [4] = {
                                ["shiny"] = false,
                                ["pt"] = 0
                            }
                        }

                        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild(
                            "PetCraftingMachine_Craft")
                            :InvokeServer(unpack(args))
                    else
                        local args = {
                            [1] = "MiningCraftMachine",
                            [2] = 2,
                            [3] = am // 16,
                            [4] = {
                                ["shiny"] = false,
                                ["pt"] = 0
                            }
                        }
                        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild(
                            "PetCraftingMachine_Craft")
                            :InvokeServer(unpack(args))
                    end
                end
            end
            if string.find(v.id, "Emerald") then
                am = v._am or 1

                if am >= 16 then
                    if am > 1600 then
                        local args = {
                            [1] = "MiningCraftMachine",
                            [2] = 3,
                            [3] = 100,
                            [4] = {
                                ["shiny"] = false,
                                ["pt"] = 0
                            }
                        }

                        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild(
                            "PetCraftingMachine_Craft")
                            :InvokeServer(unpack(args))
                    else
                        local args = {
                            [1] = "MiningCraftMachine",
                            [2] = 3,
                            [3] = am // 16,
                            [4] = {
                                ["shiny"] = false,
                                ["pt"] = 0
                            }
                        }

                        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild(
                            "PetCraftingMachine_Craft")
                            :InvokeServer(unpack(args))
                    end
                end
            end
            if string.find(v.id, "Amethyst") then
                am = v._am or 1

                if am >= 16 then
                    if am > 1600 then
                        local args = {
                            [1] = "MiningCraftMachine",
                            [2] = 4,
                            [3] = 100,
                            [4] = {
                                ["shiny"] = false,
                                ["pt"] = 0
                            }
                        }
                        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild(
                            "PetCraftingMachine_Craft")
                            :InvokeServer(unpack(args))
                    else
                        local args = {
                            [1] = "MiningCraftMachine",
                            [2] = 4,
                            [3] = am // 16,
                            [4] = {
                                ["shiny"] = false,
                                ["pt"] = 0
                            }
                        }

                        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild(
                            "PetCraftingMachine_Craft")
                            :InvokeServer(unpack(args))
                    end
                end
            end
        end
    end
end)
local teleported = false
spawn(function()
    repeat wait() until teleported
    -- for i, v in next, workspace:GetDescendants() do
    --     pcall(function()
    --         v.Transparency = 1
    --     end)
    -- end
    -- a = workspace
    -- a.DescendantAdded:Connect(function(v)
    --     pcall(function()
    --         v.Transparency = 1
    --     end)
    -- end)

    workspace.ClientAnimatorThrottling = Enum.ClientAnimatorThrottlingMode.Enabled
    workspace.InterpolationThrottling = Enum.InterpolationThrottlingMode.Enabled
    settings():GetService("RenderSettings").EagerBulkExecution = false
    workspace.LevelOfDetail = Enum.ModelLevelOfDetail.Disabled
    game:GetService("Lighting").GlobalShadows = false

    settings().Rendering.QualityLevel = "Level01"
    local g = game
    local w = g.Workspace
    local l = g.Lighting
    local t = w.Terrain
    t.WaterWaveSize = 0
    t.WaterWaveSpeed = 0
    t.WaterReflectance = 0
    t.WaterTransparency = 0
    l.GlobalShadows = false
    l.FogEnd = 9e9
    l.Brightness = 0
    for i, v in pairs(g:GetDescendants()) do
        if v.ClassName == "WedgePart"
            or v.ClassName == "Terrain"
            or v.ClassName == "MeshPart" then
            v.BrickColor = BrickColor.new(155, 155, 155)
            v.Material = "Plastic"
            v.Transparency = 1
        end
        if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
            v.Material = "Plastic"
            v.Reflectance = 0
        elseif v:IsA("Decal") or v:IsA("Texture") then
            v.Transparency = 1
        elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
            v.Lifetime = NumberRange.new(0)
        elseif v:IsA("Explosion") then
            v.BlastPressure = 1
            v.BlastRadius = 1
        elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
            v.Enabled = false
        elseif v:IsA("MeshPart") then
            v.Material = "Plastic"
            v.Reflectance = 0
            v.TextureID = 10385902758728957
        end
    end
    game.Workspace.ChildAdded:Connect(function(v)
        if v.ClassName == "WedgePart"
            or v.ClassName == "Terrain"
            or v.ClassName == "MeshPart" then
            v.BrickColor = BrickColor.new(155, 155, 155)
            v.Material = "Plastic"
            v.Transparency = 1
        end
        if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
            v.Material = "Plastic"
            v.Reflectance = 0
        elseif v:IsA("Decal") or v:IsA("Texture") then
            v.Transparency = 1
        elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
            v.Lifetime = NumberRange.new(0)
        elseif v:IsA("Explosion") then
            v.BlastPressure = 1
            v.BlastRadius = 1
        elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
            v.Enabled = false
        elseif v:IsA("MeshPart") then
            v.Material = "Plastic"
            v.Reflectance = 0
            v.TextureID = 10385902758728957
        end
    end)
    for i, e in pairs(l:GetChildren()) do
        if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
            e.Enabled = false
        end
    end
    game.Lighting.ChildAdded:Connect(function(v)
        if v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("BloomEffect") or v:IsA("DepthOfFieldEffect") then
            v.Enabled = false
        end
    end)
    spawn(function()
        while wait() do
            if getgenv().data["Disable Gui"] then
                local player = game.Players.LocalPlayer
                local playerGui = player:WaitForChild("PlayerGui")

                for _, ui in ipairs(playerGui:GetDescendants()) do
                    if ui:IsA("ScreenGui") then
                        ui.Enabled = false
                    elseif ui:IsA("GuiObject") then
                        ui.Visible = false
                    end
                end
            end
        end
    end)
end)
local ismap = false
local cnt = 0
local blocks = {}

pcall(function()
    while wait() do
        -- local args = {
        --     [1] = "__Zone_4"
        -- }

        -- game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild(
        --     "Teleports_RequestInstanceTeleport")
        --     :InvokeServer(unpack(args))
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(15305.537109375, 16.256933212280273,
            -13334.75390625)
        task.wait(1)
        for _, v in pairs(a.GetLocal().BlocksByPart) do
            if v.Pos then
                teleported = true
            end
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            local args = {
                [1] = v.Pos --[[Generation Failure]],
                [2] = 0,
                [3] = {
                    ["Caller"] = {
                        ["LineNumber"] = 431,
                        ["ScriptClass"] = "ModuleScript",
                        ["Variadic"] = false,
                        ["Traceback"] =
                            "ReplicatedStorage.Library.Client.MiningCmds.BlockWorldClient:431 function LocalSetTarget\nReplicated" ..
                            "Storage.Library.Client.MiningCmds.MiningFrontend:202\nReplicatedStorage.Librar" ..
                            "y.Functions.Debounce:26\nReplicatedStorage.Library.Client.MiningCmds.MiningFro" ..
                            "ntend:201\nReplicatedStorage.Library.Functions.RenderStepped:112 function _Ste" ..
                            "p\nReplicatedStorage.Library.Functions.RenderStepped:170",
                        ["ScriptPath"] = "ReplicatedStorage.Library.Client.MiningCmds.BlockWorldClient",
                        ["FunctionName"] = "LocalSetTarget",
                        ["Handle"] = "function: 0xfb5fce0a34e64f16",
                        ["ScriptType"] = "Instance",
                        ["ParameterCount"] = 2,
                        ["SourceIdentifier"] = "ReplicatedStorage.Library.Client.MiningCmds.BlockWorldClient"
                    }
                }
            }

            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("BlockWorlds_Target"):FireServer(
                unpack(args))

            local args = {
                [1] = Ray.new(Vector3.new(v.CFrame.Position),
                    Vector3.new(v.CFrame.Position)),
                [2] = Vector3.new(v.CFrame.Position)
            }

            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Click"):FireServer(unpack(
                args))

            local args = {
                [1] = v.Pos,
                [2] = 0
            }

            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("BlockWorlds_Break")
                :FireServer(
                    unpack(args))
            task.wait(0.5)
        end
    end
end)
