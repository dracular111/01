getgenv().Config = {
    ["Account Main"] = {"XxBlastF0xxX91"},
    ["Pet"] = {"Lobster Thermidor"},
    ["UUID"] = "Dracula111",
    ["Url"] = "http://103.249.200.78:3000"
}

repeat wait() until game:IsLoaded()
repeat wait() until game.Players.LocalPlayer.Character
repeat
    wait()
    game:GetService("VirtualUser"):CaptureController()
    game:GetService("VirtualUser"):Button1Down(Vector2.new(0, 0))
until game.Players.LocalPlayer:GetAttribute("DataFullyLoaded") and
      game.Players.LocalPlayer:GetAttribute("Finished_Loading")

-- Nhận pet nếu là account main
game.ReplicatedStorage.GameEvents.GiftPet.OnClientEvent:Connect(function(p_u_6)
    if table.find(getgenv().Config["Account Main"], game.Players.LocalPlayer.Name) then
        game.ReplicatedStorage.GameEvents.AcceptPetGift:FireServer(true, p_u_6)
    end
end)

-- Hàm kiểm tra pet cần trade
function havepet()
    local function findPetIn(container)
        for _, v in container:GetChildren() do
            if v:IsA("Tool") and v:GetAttribute("ItemType") == "Pet" then
                for _, petName in getgenv().Config["Pet"] do
                    if string.find(v.Name, petName) then
                        return v
                    end
                end
            end
        end
    end
    return findPetIn(game:GetService("Players").LocalPlayer.Backpack) or
           findPetIn(game:GetService("Players").LocalPlayer.Character)
end

-- Post thông tin account main lên server
function postmain()
    local payload = {
        ["key"] = getgenv().Config["UUID"],
        ["accounts"] = {
            [game.Players.LocalPlayer.Name] = {
                ["JobId"] = game.JobId,
                ["PlaceId"] = game.PlaceId
            }
        }
    }
    local DataCallBack = request({
        Url = getgenv().Config["Url"] .. "/postservermain",
        Method = 'POST',
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = game:GetService("HttpService"):JSONEncode(payload)
    })
    table.foreach(DataCallBack, print)
end

-- Lấy dữ liệu account main từ server
function GetDataMain(uid)
    local res = request({
        Url = getgenv().Config["Url"] .. "/getdatamain?key=" .. uid,
        Method = "GET"
    })
    local data = game:GetService("HttpService"):JSONDecode(res.Body)
    if not data or next(data) == nil then
        return {}
    end
    return data.data
end

-- Kiểm tra main có trong server không
function havemaininserver()
    for _, mainAcc in getgenv().Config["Account Main"] do
        if game:GetService("Players"):FindFirstChild(mainAcc) then
            return true
        end
    end
end

-- Nếu là account main thì post thông tin ngay khi vào
if table.find(getgenv().Config["Account Main"], game.Players.LocalPlayer.Name) then
    postmain()
end

-- Cập nhật thông tin account main 30s/lần
spawn(function()
    while wait(30) do
        pcall(function()
            if table.find(getgenv().Config["Account Main"], game.Players.LocalPlayer.Name) then
                postmain()
            end
        end)
    end
end)

-- Kiểm tra đầy kho thì kick
spawn(function()
    while wait(5) do
        pcall(function()
            local Rep = game:GetService("ReplicatedStorage")
            local DataService = require(Rep.Modules.DataService)
            local playerdata = DataService:GetData()
            local inventoryData = playerdata.PetsData.PetInventory.Data or {}
            
            local count = 0
            for _ in inventoryData do
                count += 1
            end

            if count >= 60 + (playerdata.PetsData.PurchasedPetInventorySlots or 0) * 5 then
                writefile(game.Players.LocalPlayer.Name .. ".txt", "Completed-Done")
                game.Players.LocalPlayer:Kick("Inventory Full")
            end
        end)
    end
end)

-- Trade và kick sau 5 giây
spawn(function()
    while wait() do 
        pcall(function()
            if not table.find(getgenv().Config["Account Main"], game.Players.LocalPlayer.Name) then
                if havepet() and havemaininserver() then
                    for _, mainAcc in getgenv().Config["Account Main"] do
                        if game.Players:FindFirstChild(mainAcc) then
                            if havepet():GetAttribute("d") then
                                game.ReplicatedStorage.GameEvents.Favorite_Item:FireServer(havepet())
                                task.wait(1)
                            end
                            havepet().Parent = game.Players.LocalPlayer.Character
                            game.ReplicatedStorage.GameEvents.PetGiftingService:FireServer("GivePet", game.Players:FindFirstChild(mainAcc))
                            task.wait(5) -- đợi 5s sau khi trade
                            game.Players.LocalPlayer:Kick("Trade Done")
                        end
                    end
                end
            end
        end)
    end
end)
