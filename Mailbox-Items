-- Kiểm tra biến toàn cục để xác định script đã chạy hay chưa
if _G.AUTOMAILBOX then
    warn("Script đã được chạy trước đó!")
    return -- Dừng script nếu đã chạy
end

-- Đánh dấu script đã được chạy
_G.AUTOMAILBOX = true

print("Auto MailBox sẽ bắt đầu gửi thư trong 60 giay nữa.")

getgenv().AutoMail = {
    ['Items'] = {
        ['All Huges'] = { Class = "Pet", AllVariants = true, Amount = 1 },
        ['Huge Arcade Dog Card'] = { Class = "Card", AllVariants = true, Amount = 1 },
        ['Huge Blurred Axolotl Card'] = { Class = "Card", AllVariants = true, Amount = 1 },
        ['Huge Nightmare Dog Card'] = { Class = "Card", AllVariants = true, Amount = 1 },
        ['Huge Pog Cat Card'] = { Class = "Card", AllVariants = true, Amount = 1 },
        ['Huge Storm Axolotl Card'] = { Class = "Card", AllVariants = true, Amount = 1 },
        ['Huge Ninja Capybara Card'] = { Class = "Card", AllVariants = true, Amount = 1 },
        ['Huge Arcane Dominus Card'] = { Class = "Card", AllVariants = true, Amount = 1 },
        ['Titanic Cupcake Pegasus Card'] = { Class = "Card", AllVariants = true, Amount = 1 },
        ['Titanic Signature BIG Maskot Card'] = { Class = "Card", AllVariants = true, Amount = 1 },
        --['Retro Pack'] = { Class = "Lootbox", MinAmount = 1, Amount = "Max" },
        --['Nightmare Pack'] = { Class = "Lootbox", MinAmount = 50, Amount = "Max" },
        --['Fantasy Pack'] = { Class = "Lootbox", MinAmount = 1, Amount = "Max" },
        ['Ninja Pack'] = { Class = "Lootbox", MinAmount = 2, Amount = "Max" },
        --['Axolotl Pack'] = { Class = "Lootbox", MinAmount = 10, Amount = "Max" },
        --['Pog Pack'] = { Class = "Lootbox", MinAmount = 1, Amount = "Max" },
        ['BIG Pack'] = { Class = "Lootbox", MinAmount = 20, Amount = "Max" },
        ['Hype Egg 2'] = { Class = "Lootbox", Amount = 1 },
        ['Hype Egg'] = { Class = "Lootbox", Amount = "Max" },
        ['Huge Machine Egg 4'] = { Class = "Egg", Amount = 1 },
        ['Hellfire Gift'] = { Class = "Lootbox", MinAmount = 15, Amount = "Max" },
        ['Love Gift'] = { Class = "Lootbox", MinAmount = 1, Amount = "Max" },
        ['Doodle Gift'] = { Class = "Lootbox", MinAmount = 1, Amount = "Max" },
        ['Insta Plant Capsule'] = { Class = "Misc", MinAmount = 20, Amount = "Max" },
        ['Mini Pinata'] = { Class = "Misc", MinAmount = 50, Amount = "Max" },
        ['Secret Key'] = { Class = "Misc", MinAmount = 50, Amount = "Max" },
        ['Void Key'] = { Class = "Misc", MinAmount = 50, Amount = "Max" },
        ['Tech Key'] = { Class = "Misc", MinAmount = 200, Amount = "Max" },
        ['Crystal Key'] = { Class = "Misc", MinAmount = 200, Amount = "Max" },
        ["Egg"] = {Class = "Egg", Id = "Huge Machine Egg 5"", MinAmount = 1},,
        ["Daycare egg"] = {Class = "Egg", Id = "Huge Machine Egg 4", MinAmount = 1},
        ["Secret pet1"] = {Class = "Pet", Id = "Rainbow Swirl", MinAmount = 1, AllVariants = true},
        ["Secret pet2"] = {Class = "Pet", Id = "Banana", MinAmount = 1, AllVariants = true},
        ["Secret pet3"] = {Class = "Pet", Id = "Coin", MinAmount = 1, AllVariants = true},
        ["Secret pet4"] = {Class = "Pet", Id = "Lucky Block", MinAmount = 1, AllVariants = true},
        ["Send all Diamonds"] = {Class = "Currency", Id = "Diamonds", KeepAmount = "2m", MinAmount = "5m"},
        --['Love Cow'] = { Class = "Pet", MinAmount = 100, AllVariants = true, Amount = "Max" }, 
    },
    ['Loop Interval'] = 60,
    ['Users'] = {"barus1ik", "mcane9gb", "boudo_4uz", "boekh6uo", "gills6ii"},
}

repeat task.wait() until game:IsLoaded()
local LocalPlayer = game:GetService('Players').LocalPlayer
repeat task.wait() until not LocalPlayer.PlayerGui:FindFirstChild('__INTRO')

local Client = game:GetService('ReplicatedStorage').Library.Client
local Network = require(Client.Network)
local SaveModule = require(Client.Save)

while task.wait(AutoMail['Loop Interval'] or 60) do
    local Queue = {}
    local AnyItemsSent = false  

    for Class, Items in pairs(SaveModule.Get()['Inventory']) do
        for uid, v in pairs(Items) do
            local PetCheck = (Class == "Pet") and string.find(v.id, "Huge")
            local Config = false

            for Id, Info in pairs(AutoMail['Items']) do
                local isVariant = Info.AllVariants and string.find(v.id, Id)

                local isValid = true
                if Info.pt and Info.pt ~= v.pt then isValid = false end
                if Info.sh and Info.sh ~= v.sh then isValid = false end
                if Info.tn and Info.tn ~= v.tn then isValid = false end

                local itemAmount = tonumber(v._am) or 1

                if (Id == v.id or isVariant) and Info.Class == Class and isValid then
                    if Info.MinAmount then
                        if itemAmount >= Info.MinAmount then
                            Config = true
                        end
                    else
                        if Info.Amount == "Max" then
                            if itemAmount > 0 then
                                Config = true
                            end
                        elseif Info.Amount <= itemAmount then
                            Config = true
                        end
                    end
                end
            end

            if Class == "Egg" or Config or PetCheck and not Queue[uid] then
                Queue[uid] = { Class = Class, Info = v }
            end
        end
    end

    for uid, Data in pairs(Queue) do
        local Unlocked = false
        local Mailed = false
        local v = Data.Info
        local amountToSend = tonumber(v._am) or 1  

        if v._lk then
            while not Unlocked do
                Unlocked, err = Network.Invoke("Locking_SetLocked", uid, false) task.wait(0.1)
            end
        end

        local User = AutoMail['Users'][math.random(1, #AutoMail['Users'])]
        while not Mailed do
            Mailed, err = Network.Invoke("Mailbox: Send", User, "Bless", Data.Class, uid, amountToSend) task.wait(0.1)
        end

        AnyItemsSent = true

        -- 📝 Giữ nguyên print() cũ
        print("Đã gửi " .. amountToSend .. " vật phẩm " .. v.id .. " cho người dùng: " .. User)
    end

    if not AnyItemsSent then
        --print("Không có vật phẩm nào đủ điều kiện để gửi.")
    end
end
