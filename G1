getgenv().Config = {
    ["Time To Sell"] = 35, -- Seconds
    ["Seed"] = {
        ["Strawberry"] = 44,
        ["Corn"] = 44,
        ["Coconut"] = 44,
        ["Cacao"] = 44,
        ["Pumpkin"] = 44,
        ["Mango"] = 44,
        ["Banana"] = 44,
        ["Orange Tulip"] = 44,
        ["Watermelon"] = 44,
        ["Dragon Fruit"] = 44,
        ["Cactus"] = 44,
        ["Daffodil"] = 44,
        ["Pepper"] = 44,
        ["Bamboo"] = 44
    },
    ["FPS"] = 5,
    ["Buy Egg"] = true,
    ["Egg"] = {
        ["Common Egg"] = false,
        ["Rare Egg"] = false,
        ["Mythical Egg"] = false,
        ["Legendary Egg"] = false,
        ["Bug Egg"] = true
    },
    ["ItemBlood"] = {
        ["Blood Banana"] = true,
        ["Blood Owl"] = true,
        ["Night Seed Pack"] = true,
        ["Moon Melon"] = false,
        ["Mysterious Crate"] = false,
        ["Blood Kiwi"] = false,
        ["Night Egg"] = false,
        ["Star Caller"] = false,
        ["Blood Hedgehog"] = false
    },
    ["Item Special Buy"] = {
        ["Candy Blossom"] = true,
        ["Chocolate Sprinkler"] = true,
        ["Candy Sunflower"] = true,
        ["Easter Egg"] = true,
        ["Red Lollipop"] = true,
        ["Chocolate Carrot"] = true
    },
    ["Sprinkler"] = {
        ["Basic Sprinkler"] = true,
        ["Advanced Sprinkler"] = true,
        ["Master Sprinkler"] = true,
        ["Godly Sprinkler"] = true
    },
    ["PetNeedSend"] = "congahpz000",
    ["Url"] = "https://discord.com/api/webhooks/1373626816438206484/Klq2fCdRE3zf5ErO76kyS5dY_XWaPLfFZxMCLclhja_tnOWQhmjxH9pg56e3uU1_cM5F",
    ["Boost FPS"] = true,
    ["Black Screen"] = false
}
repeat
    wait()
until game:IsLoaded()
repeat
    wait()
until game.Players.LocalPlayer.Character
repeat
    wait()
    game:GetService("VirtualUser"):CaptureController()
    game:GetService("VirtualUser"):Button1Down(Vector2.new(0, 0))
until game.Players.LocalPlayer:GetAttribute("DataFullyLoaded") and
    game.Players.LocalPlayer:GetAttribute("Finished_Loading")
repeat
    wait()
until game.CoreGui
if not LPH_OBFUSCATED then
    getfenv().LPH_NO_VIRTUALIZE = function(f)
        return f
    end
end
local HopGui = Instance.new("ScreenGui")
local NameHub = Instance.new("TextLabel")
local UIStroke = Instance.new("UIStroke")
local Strokestatus = Instance.new("UIStroke")
local status = Instance.new("TextLabel")
local StrokeBounty = Instance.new("UIStroke")
local Bounty = Instance.new("TextLabel")
local StrokeTime = Instance.new("UIStroke")
local Time = Instance.new("TextLabel")
local StrokeDetect = Instance.new("UIStroke")
local Detect = Instance.new("TextLabel")
local animation = Instance.new("Animation")

HopGui.Name = "CyndralDev"
HopGui.Parent = game:GetService("CoreGui")
HopGui.Enabled = false
HopGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

NameHub.Name = "NameHub"
NameHub.Parent = HopGui
NameHub.AnchorPoint = Vector2.new(0.5, 0.5)
NameHub.Position = UDim2.new(0.5, 0, 0.3, 0)
NameHub.Size = UDim2.new(1, 0, 0, 80)
NameHub.BackgroundTransparency = 0.999
NameHub.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
NameHub.BorderColor3 = Color3.fromRGB(0, 0, 0)
NameHub.BorderSizePixel = 0
NameHub.Font = Enum.Font.FredokaOne
NameHub.Text = "Cyndral.Dev"
NameHub.TextColor3 = Color3.fromRGB(9, 255, 248)
NameHub.TextSize = 50

UIStroke.Parent = NameHub
UIStroke.Color = Color3.fromRGB(0, 0, 0)
UIStroke.Thickness = 1

local format = function(number)
    local formatted = tostring(number)
    local k = #formatted % 3
    if k == 0 then
        k = 3
    end
    local result = formatted:sub(1, k)
    for i = k + 1, #formatted, 3 do
        result = result .. "," .. formatted:sub(i, i + 2)
    end
    return result
end

Bounty.Name = "Coins"
Bounty.Parent = HopGui
Bounty.AnchorPoint = Vector2.new(0.5, 0.5)
Bounty.Position = UDim2.new(0.5, 0, 0.5, 0)
Bounty.Size = UDim2.new(0, 200, 0, 30)
Bounty.BackgroundTransparency = 0.999
Bounty.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Bounty.BorderColor3 = Color3.fromRGB(0, 0, 0)
Bounty.BorderSizePixel = 0
Bounty.Font = Enum.Font.FredokaOne
Bounty.Text = "Coins: 0"
Bounty.TextColor3 = Color3.fromRGB(255, 255, 255)
Bounty.TextSize = 20
StrokeBounty.Parent = Bounty
StrokeBounty.Color = Color3.fromRGB(0, 0, 0)
StrokeBounty.Thickness = 1

Time.Name = "Time"
Time.Parent = HopGui
Time.AnchorPoint = Vector2.new(0.5, 0.5)
Time.Position = UDim2.new(0.5, 0, 0.4, 0)
Time.Size = UDim2.new(0, 200, 0, 30)
Time.BackgroundTransparency = 0.999
Time.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Time.BorderColor3 = Color3.fromRGB(0, 0, 0)
Time.BorderSizePixel = 0
Time.Font = Enum.Font.FredokaOne
Time.Text = "0:0:0"
Time.TextColor3 = Color3.fromRGB(255, 255, 255)
Time.TextSize = 20
StrokeTime.Parent = Time
StrokeTime.Color = Color3.fromRGB(0, 0, 0)
StrokeTime.Thickness = 1

local Blur = Instance.new("BlurEffect")
Blur.Name = "Blur"
Blur.Parent = game.Lighting
Blur.Size = 20
Blur.Enabled = false
function equipweapon(aq)
    local c6 = tostring(aq)
    local c7 = game.Players.LocalPlayer.Backpack:FindFirstChild(c6)
    local c8 = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") or
                   game.Players.LocalPlayer.Character:WaitForChild("Humanoid")
    if c7 then
        c8:EquipTool(c7)
    end
end

spawn(function()
    while wait() do
        local scripttime = game.Workspace.DistributedGameTime
        local seconds = scripttime % 60
        local minutes = math.floor(scripttime / 60 % 60)
        local hours = math.floor(scripttime / 3600)
        Time.Text = "Time : " .. hours .. "h" .. minutes .. "m" .. math.floor(seconds) .. "s"
    end
end)
local playertarget = {"bocanhet164", "Phapsutrungquoc"}
local function SetNewReason(textstatus)
    if not textstatus then
        textstatus = ''
    end
    if textstatus == '' then
        Bounty.Enabled = false
        Blur.Enabled = false
        return
    end
    HopGui.Enabled = true
    Blur.Enabled = true
    Bounty.Text = textstatus
end
local VirtualUser = game:service "VirtualUser"
game:service("Players").LocalPlayer.Idled:connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)
setfpscap(getgenv().Config["FPS"])
if getgenv().Config["Black Screen"] then
    game:GetService("Lighting").ExposureCompensation = -math.huge
end
local v0 = {
    k = "e3",
    m = "e6",
    b = "e9",
    t = "e12",
    q = "e15"
};
ParseNumberSmart = function(v1)
    if type(v1) == "string" then
        v1 = v1:gsub("[,%s%c%z]", "");
        if #v1 > 0 then
            local v2 = v0[v1:sub(#v1):lower()];
            if v2 then
                v1 = v1:sub(1, #v1 - 1) .. v2;
            end
        end
    end
    return (tonumber(v1));
end;
function writefileyummy()
    writefile(game.Players.LocalPlayer.Name .. ".txt", "Completed-Done")
end

function haveraccon()
    if getgenv().Config["Special"] then
        for i, v in workspace.PetsPhysical:GetChildren() do
            if v:GetAttribute("OWNER") == game.Players.LocalPlayer.Name then
                for i1, v1 in next, v:GetChildren() do
                    if v1.Name == "Raccoon" then
                        return true
                    end
                end
            end
        end
        for i, v in game:GetService("Players").LocalPlayer.Backpack:GetChildren() do
            if v and (string.find(v.Name, "Raccon")) then
                return true
            end
        end
        for i, v in game:GetService("Players").LocalPlayer.Character:GetChildren() do
            if v and (string.find(v.Name, "Raccon")) then
                return true
            end
        end
    end
end

local a
spawn(function()
    pcall(function()
        while wait() do
            pcall(function()
                if getgenv().Config["Buy Egg"] then
                    task.wait(3)
                    local v_u_1 = game:GetService("ReplicatedStorage")

                    local v_u_3 = require(v_u_1.Modules.DataService)
                    local v33 = v_u_3:GetData()

                    for i, v in v33.PetEggStock.Stocks do
                        if getgenv().Config["Egg"][v.EggName] and v.Stock > 0 then
                            local args = {i}
                            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyPetEgg")
                                :FireServer(unpack(args))
                        end
                    end
                end
            end)
        end
    end)
end)
function sendwh(name)
    local Message = {
        ['username'] = "Grow A Garden",
        ["content"] = "@everyone Found: " .. name,
        ["embeds"] = {{
            ["title"] = "Grow Of Garden",
            ["description"] = "Account: ||" .. game.Players.LocalPlayer.Name .. "||\nMoney: " ..
                format(math.floor(game.Players.LocalPlayer.leaderstats.Sheckles.Value)) .. "\nTime: " .. os.date("%X") ..
                "\n",
            ["color"] = 0x09FFF8,
            ["footer"] = {
                ["text"] = "Cyndral.Dev"
            }
        }}

    }
    local DataCallBack = request({
        Url = getgenv().Config["Url"],
        Method = 'POST',
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = game:GetService("HttpService"):JSONEncode(Message)
    })
end

game:GetService("Players").LocalPlayer.Backpack.ChildAdded:Connect(function(v)
    if v and string.find(v.Name, getgenv().Config["PetNeedSend"]) then
        sendwh(v.Name)
    end
end)
local dasend = false
spawn(function()
    pcall(function()
        while wait() do
            pcall(function()
                if getgenv().Config["Change Account Custom"] then
                    local player = game.Players.LocalPlayer
                    local account = ParseNumberSmart(getgenv().Config["Money to Change"])
                    if player.leaderstats.Sheckles.Value >= account then
                        writefileyummy()
                        if not dasend then
                            local urlerror = getgenv().Config["Url When Have Owl"]
                            local Message = {
                                ['username'] = "Grow Of Garden",
                                ["content"] = "@everyone Found Raccon",
                                ["embeds"] = {{
                                    ["title"] = "Grow Of Garden",
                                    ["description"] = "Account: ||" .. player.Name .. "||\nMoney: " ..
                                        format(math.floor(player.leaderstats.Sheckles.Value)) .. "\nTime: " ..
                                        os.date("%X") .. "\n",
                                    ["color"] = 0x09FFF8,
                                    ["footer"] = {
                                        ["text"] = "Cyndral.Dev"
                                    }
                                }}

                            }
                            local DataCallBack = request({
                                Url = getgenv().Config["Url"],
                                Method = 'POST',
                                Headers = {
                                    ["Content-Type"] = "application/json"
                                },
                                Body = game:GetService("HttpService"):JSONEncode(Message)
                            })
                            dasend = true
                            wait(5)
                        end
                    end
                end
            end)
        end
    end)
end)
spawn(function()
    while wait() do
        if getgenv().Config["Boost FPS"] then
            local player = game.Players.LocalPlayer
            local playerGui = player:WaitForChild("PlayerGui")

            for _, ui in ipairs(playerGui:GetDescendants()) do
                if ui:IsA("ScreenGui") then
                    ui.Enabled = false
                elseif ui:IsA("GuiObject") then
                    ui.Visible = false
                end
            end
        end
    end
end)

if getgenv().Config["Boost FPS"] then
    local player = game.Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")
    for i, v in next, workspace:GetDescendants() do
        pcall(function()
            v.Transparency = 1
        end)
    end
    a = workspace
    a.DescendantAdded:Connect(function(v)
        pcall(function()
            v.Transparency = 1
        end)
    end)
    workspace.ClientAnimatorThrottling = Enum.ClientAnimatorThrottlingMode.Enabled
    workspace.InterpolationThrottling = Enum.InterpolationThrottlingMode.Enabled
    settings():GetService("RenderSettings").EagerBulkExecution = false
    workspace.LevelOfDetail = Enum.ModelLevelOfDetail.Disabled
    game:GetService("Lighting").GlobalShadows = false

    settings().Rendering.QualityLevel = "Level01"
    local g = game
    local w = g.Workspace
    local l = g.Lighting
    local t = w.Terrain
    t.WaterWaveSize = 0
    t.WaterWaveSpeed = 0
    t.WaterReflectance = 0
    t.WaterTransparency = 0
    l.GlobalShadows = false
    l.FogEnd = 9e9
    l.Brightness = 0
    for i, v in pairs(g:GetDescendants()) do
        if v.ClassName == "WedgePart" or v.ClassName == "Terrain" or v.ClassName == "MeshPart" then
            v.BrickColor = BrickColor.new(155, 155, 155)
            v.Material = "Plastic"
            v.Transparency = 1
        end
        if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
            v.Material = "Plastic"
            v.Reflectance = 0
        elseif v:IsA("Decal") or v:IsA("Texture") then
            v.Transparency = 1
        elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
            v.Lifetime = NumberRange.new(0)
        elseif v:IsA("Explosion") then
            v.BlastPressure = 1
            v.BlastRadius = 1
        elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
            v.Enabled = false
        elseif v:IsA("MeshPart") then
            v.Material = "Plastic"
            v.Reflectance = 0
            v.TextureID = 10385902758728957
        end
    end
    game.Workspace.ChildAdded:Connect(function(v)
        if v.ClassName == "WedgePart" or v.ClassName == "Terrain" or v.ClassName == "MeshPart" then
            v.BrickColor = BrickColor.new(155, 155, 155)
            v.Material = "Plastic"
            v.Transparency = 1
        end
        if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
            v.Material = "Plastic"
            v.Reflectance = 0
        elseif v:IsA("Decal") or v:IsA("Texture") then
            v.Transparency = 1
        elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
            v.Lifetime = NumberRange.new(0)
        elseif v:IsA("Explosion") then
            v.BlastPressure = 1
            v.BlastRadius = 1
        elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
            v.Enabled = false
        elseif v:IsA("MeshPart") then
            v.Material = "Plastic"
            v.Reflectance = 0
            v.TextureID = 10385902758728957
        end
    end)
    for i, e in pairs(l:GetChildren()) do
        if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or
            e:IsA("DepthOfFieldEffect") then
            e.Enabled = false
        end
    end
    game.Lighting.ChildAdded:Connect(function(v)
        if v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("BloomEffect") or
            v:IsA("DepthOfFieldEffect") then
            v.Enabled = false
        end
    end)
end

local plr = game.Players.LocalPlayer
function islive()
    local plr = game.Players.LocalPlayer
    local character = plr.Character or plr.CharacterAdded:Wait() -- Wait for character to load if it doesn't exist yet
    local humanoid = character:WaitForChild("Humanoid")
    return humanoid
end

if getgenv().noclipsetup ~= true then
    spawn(function()
        game:GetService("RunService").Stepped:Connect(function()
            if islive() then
                if getgenv().noclip then
                    for _, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                        if v:IsA("BasePart") then
                            v.CanCollide = false
                        end
                    end

                    if not islive() then
                        getgenv().noclip = false
                    end
                end
                if getgenv().noclip then
                    for r, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                        if v:IsA("BasePart") then
                            v.CanCollide = false
                        end
                    end
                end
            end
        end)
    end)
    getgenv().noclipsetup = true
end
function getplace()
    for i, v in workspace.Farm:GetChildren() do
        if v.Name == "Farm" then
            if v:FindFirstChild("Important") and v.Important:FindFirstChild("Data") and
                v.Important.Data:FindFirstChild("Owner") and v.Important.Data:FindFirstChild("Owner").Value ==
                game.Players.LocalPlayer.Name then
                return v
            end
        end
    end
end

function haveseed()
    if #getplace().Important.Plants_Physical:GetChildren() < 800 then
        for i, v in game:GetService("Players").LocalPlayer.Backpack:GetChildren() do
            if (string.find(v.Name, "Seed")) and not string.find(v.Name, "Pack") then
                return v
            end
        end
        for i, v in game:GetService("Players").LocalPlayer.Character:GetChildren() do
            if (string.find(v.Name, "Seed")) and not string.find(v.Name, "Pack") then
                return v
            end
        end
    end
end

function checkcanplantegg()
    local cntt = 0
    for i, v in getplace().Important.Objects_Physical:GetChildren() do
        if string.find(v.Name, "Egg") then
            cntt = cntt + 1
        end
    end
    return cntt
end

function haveegg()
    if checkcanplantegg() < 3 then
        for i, v in game:GetService("Players").LocalPlayer.Backpack:GetChildren() do
            if (string.find(v.Name, "Egg")) and not string.find(v.Name, "Pack") then
                return v
            end
        end
        for i, v in game:GetService("Players").LocalPlayer.Character:GetChildren() do
            if (string.find(v.Name, "Egg")) and not string.find(v.Name, "Pack") then
                return v
            end
        end
    end
end

function check()
    local cnt = 0
    for i, v in game:GetService("Players").LocalPlayer.Backpack:GetChildren() do
        if v:GetAttribute("ITEM_TYPE") == "Holdable" and not string.find(v.Name, "Moonlit") then
            cnt = cnt + 1
        end
    end
    for i, v in game:GetService("Players").LocalPlayer.Character:GetChildren() do
        if v:GetAttribute("ITEM_TYPE") == "Holdable" and not string.find(v.Name, "Moonlit") then
            cnt = cnt + 1
        end
    end
    return cnt
end

local startsell = false
if not haveseed() then
    repeat
        wait()
        for i, v in getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Teleport_UI.Frame.Sell.Activated) do
            v.Function()
        end
    until plr:DistanceFromCharacter(Vector3.new(66.6856689453125, 2.999606132507324, 0.40586328506469727)) < 10
    repeat
        wait()
        for i, v in game:GetService("Players").LocalPlayer.Backpack:GetChildren() do
            if v:GetAttribute("ITEM_TYPE") == "Holdable" and not string.find(v.Name, "Moonlit") then
                v.Parent = game:GetService("Players").LocalPlayer.Character
            end
        end
        task.wait(3)
        game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("Sell_Item"):FireServer()
    until check() <= 10

    startsell = false
end
local collect = false
function havemoonlit()
    for i, v in game:GetService("Players").LocalPlayer.Backpack:GetChildren() do
        if string.find(v.Name, "Moonlit") and
            math.floor(game:GetService("Players").LocalPlayer.leaderstats.Sheckles.Value) >= 100 then
            return true
        end
    end
end

function havenightstaff()
    for i, v in game:GetService("Players").LocalPlayer.Backpack:GetChildren() do
        if v.Name == "Night Staff" then
            return v
        end
    end
end

spawn(function()
    while wait() do
        if havemoonlit() then
            local args = {"SubmitAllPlants"}
            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("NightQuestRemoteEvent")
                :FireServer(unpack(args))
        end
    end
end)
spawn(function()
    pcall(function()
        while wait(getgenv().Config["Time To Sell"]) do
            if check() >= 1 then
                startsell = true
                pcall(function()
                    repeat
                        wait()
                        for i, v in getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Teleport_UI.Frame
                                                       .Sell.Activated) do
                            v.Function()
                        end
                    until plr:DistanceFromCharacter(
                        Vector3.new(66.6856689453125, 2.999606132507324, 0.40586328506469727)) < 10
                    repeat
                        wait()
                        repeat
                            wait()
                            for i, v in getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Teleport_UI
                                                           .Frame.Sell.Activated) do
                                v.Function()
                            end
                        until plr:DistanceFromCharacter(Vector3.new(66.6856689453125, 2.999606132507324,
                            0.40586328506469727)) < 10
                        for i, v in game:GetService("Players").LocalPlayer.Backpack:GetChildren() do
                            if v:GetAttribute("ITEM_TYPE") == "Holdable" and not string.find(v.Name, "Moonlit") and
                                not v:GetAttribute("Favorite") then
                                v.Parent = game:GetService("Players").LocalPlayer.Character
                            end
                        end
                        game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("Sell_Item")
                            :FireServer()
                    until check() <= 10

                    startsell = false
                end)
            end
        end
    end)
end)
spawn(function()
    pcall(function()
        while wait() do
            pcall(function()
                if (#game:GetService("Players").LocalPlayer.Backpack:GetChildren() >= 200 or
                    (game:GetService("Players").LocalPlayer.leaderstats.Sheckles.Value < 100 and
                        #game:GetService("Players").LocalPlayer.Backpack:GetChildren() > 1)) then
                    startsell = true
                    repeat
                        wait()
                        for i, v in getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Teleport_UI.Frame
                                                       .Sell.Activated) do
                            v.Function()
                        end
                    until plr:DistanceFromCharacter(
                        Vector3.new(66.6856689453125, 2.999606132507324, 0.40586328506469727)) < 10
                    repeat
                        wait()
                        repeat
                            wait()
                            for i, v in getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Teleport_UI
                                                           .Frame.Sell.Activated) do
                                v.Function()
                            end
                        until plr:DistanceFromCharacter(Vector3.new(66.6856689453125, 2.999606132507324,
                            0.40586328506469727)) < 10
                        for i, v in game:GetService("Players").LocalPlayer.Backpack:GetChildren() do
                            if v:GetAttribute("ITEM_TYPE") == "Holdable" and not string.find(v.Name, "Moonlit") then
                                v.Parent = game:GetService("Players").LocalPlayer.Character
                            end
                        end
                        game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("Sell_Item")
                            :FireServer()
                    until check() <= 10
                    for i, v in getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Teleport_UI.Frame.Garden
                                                   .Activated) do
                        v.Function()
                    end

                    startsell = false
                end
            end)
        end
    end)
end)
function ismax()
    local a = require(game:GetService("ReplicatedStorage").Modules.InventoryService)
    return a.IsMaxInventory() or #game:GetService("Players").LocalPlayer.Backpack:GetChildren() >= 200
end

function haveowl()
    for i, v in game:GetService("Players").LocalPlayer.Backpack:GetChildren() do
        if string.find(v.Name, "Owl") then
            return v
        end
    end
    for i, v in game:GetService("Players").LocalPlayer.Character:GetChildren() do
        if string.find(v.Name, "Owl") then
            return v
        end
    end
end
spawn(function()
    pcall(function()
        while wait() do
            pcall(function()
                for i, v in game.Players.LocalPlayer.Backpack:GetChildren() do
                    if string.find(v.Name, "Pack") then
                        v.Parent = game.Players.LocalPlayer.Character
                    end
                end
                for i, v in game.Players.LocalPlayer.Character:GetChildren() do
                    if string.find(v.Name, "Pack") then
                        v:Activate()
                        task.wait(0.2)
                        for i, v in getconnections(game:GetService("Players").LocalPlayer.PlayerGui.RollCrate_UI.Frame
                                                       .Skip.Activated) do
                            v.Function()
                        end
                    end
                end

            end)
        end
    end)
end)
spawn(function()
    pcall(function()
        while wait() do
            pcall(function()
                if workspace:GetAttribute("BloodMoonEvent") then
                    local v1 = game:GetService("ReplicatedStorage")
                    local priceblood = require(game:GetService("ReplicatedStorage").Data.EventShopData)
                    local v_u_6 = require(v1.Modules.DataService)
                    local v45 = v_u_6:GetData()
                    for i, v in v45.EventShopStock.Stocks do
                        if v.Stock > 0 then
                            print(i, getgenv().Config["ItemBlood"][i], game:GetService("Players").LocalPlayer
                                .leaderstats.Sheckles.Value >= priceblood[i].Price)
                            if getgenv().Config["ItemBlood"][i] and
                                game:GetService("Players").LocalPlayer.leaderstats.Sheckles.Value >= priceblood[i].Price then
                                local args = {i}
                                game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild(
                                    "BuyEventShopStock"):FireServer(unpack(args))

                            end
                            if getgenv().Config["Item Special Buy"][i] and
                                game:GetService("Players").LocalPlayer.leaderstats.Sheckles.Value >= priceblood[i].Price then
                                local args = {i}
                                game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild(
                                    "BuyEventShopStock"):FireServer(unpack(args))

                            end
                        end
                    end
                end
            end)
        end
    end)
end)

spawn(function()
    pcall(function()
        while wait() do
            pcall(function()
                local dataseed = require(game:GetService("ReplicatedStorage").Data.SeedData)
                local v_u_1 = game:GetService("ReplicatedStorage")
                game:GetService("TweenService")
                local v_u_2 = game.Players.LocalPlayer.PlayerGui:WaitForChild("Seed_Shop")
                local v_u_3 = require(v_u_1.Modules.GuiController)
                local v_u_4 = require(v_u_1.Modules.DataService)
                local price = require(game:GetService("ReplicatedStorage").Data.GearData)
                local v22 = v_u_4:GetData()
                for i, v in v22.GearStock.Stocks do
                    if v.Stock > 0 then

                        if getgenv().Config["Sprinkler"][i] and
                            game:GetService("Players").LocalPlayer.leaderstats.Sheckles.Value >= price[i].Price then
                            local args = {i}
                            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyGearStock")
                                :FireServer(unpack(args))

                        end

                    end

                end
            end)
        end
    end)
end)
function PlantStaffs()
    for i, v in pairs(plr.Backpack:GetChildren()) do
        if v:IsA("Tool") and v:GetAttribute("ItemName") == "Night Staff" and
            not getplace().Important.Objects_Physical:FindFirstChild(v:GetAttribute("ItemName")) then

            local Centers = getplace().Important.Plant_Locations.Locations.Can_Plant
            local Offset = Centers.Position + Vector3.new(0, 0.5, 0)

            local Filter = v:GetAttribute("ItemName") == ("Lightning Rod" or "Star Caller") and
                               string.gsub(v:GetAttribute("ItemName"), " ", "") .. "Service" or
                               v:GetAttribute("ItemName") == "Night Staff" and "NightStaffRemoteEvent"
            -- string.gsub(v:GetAttribute("ItemName")," ","").."Service"

            plr.Character.Humanoid:EquipTool(v)
            task.wait(0.5)

            game.ReplicatedStorage.GameEvents[Filter]:FireServer("Create", CFrame.new(Offset))

            task.wait(0.5)
            plr.Character.Humanoid:UnequipTools()
        end
    end

    for i, v in pairs(plr.Character:GetChildren()) do
        if v:IsA("Tool") and v:GetAttribute("ItemName") == "Night Staff" and
            not getplace().Important.Objects_Physical:FindFirstChild(v:GetAttribute("ItemName")) then

            local Centers = getplace().Important.Plant_Locations.Locations.Can_Plant
            local Offset = Centers.Position + Vector3.new(0, 0.5, 0)

            local Filter = v:GetAttribute("ItemName") == ("Lightning Rod" or "Star Caller") and
                               string.gsub(v:GetAttribute("ItemName"), " ", "") .. "Service" or
                               v:GetAttribute("ItemName") == "Night Staff" and "NightStaffRemoteEvent"
            -- string.gsub(v:GetAttribute("ItemName")," ","").."Service"

           
            game.ReplicatedStorage.GameEvents[Filter]:FireServer("Create", CFrame.new(Offset))

            task.wait(0.5)
            plr.Character.Humanoid:UnequipTools()
        end
    end
end

spawn(function()
    pcall(function()
        while wait() do
            pcall(function()
                for i, v in pairs(plr.Backpack:GetChildren()) do
                    if v:IsA("Tool") and getgenv().Config["Sprinkler"][v:GetAttribute("ItemName")] and
                        not getplace().Important.Objects_Physical:FindFirstChild(v:GetAttribute("ItemName")) then
                        local Centers = getplace().Important.Plant_Locations.Can_Plant
                        local Offset = Centers.Position + Vector3.new(0, 0.5, 0)
                        v.Parent = plr.Character

                        game.ReplicatedStorage.GameEvents["SprinklerService"]:FireServer("Create", CFrame.new(Offset))

                        task.wait(0.5)
                        v.Parent = plr.Backpack
                    end
                end
                PlantStaffs()
            end)
        end
    end)
end)
spawn(function()
    pcall(function()
        while wait() do
            pcall(function()
                local cnt = 0;

                for i, v in getplace().Important.Plants_Physical:GetChildren() do
                    if not string.find(v.Name, "Carrot") then
                        for i1, v1 in next, v:GetChildren() do
                            if v1.Name == "Fruits" then
                                for i2, v2 in v1:GetChildren() do
                                    if (cnt < 200) then
                                        local args = {buffer.fromstring("\001\001\000\001"), {v2}}
                                        game:GetService("ReplicatedStorage"):WaitForChild("ByteNetReliable"):FireServer(
                                            unpack(args))
                                        task.wait(0.2)
                                        cnt = cnt + 1
                                    else
                                        break
                                    end
                                end
                            end
                        end
                    else
                        local args = {buffer.fromstring("\001\001\000\001"), {v}}
                        game:GetService("ReplicatedStorage"):WaitForChild("ByteNetReliable"):FireServer(unpack(args))
                    end
                end
            end)
        end
    end)
end)
local a = require(game:GetService("ReplicatedStorage").Modules.Remotes)

local buyseed = false
spawn(function()
    pcall(function()
        while wait() do
            pcall(function()
                if not startsell and not haveseed() and not buyseed then
                    for i, v in getplace().Important.Plants_Physical:GetChildren() do
                        for i1, v1 in next, v:GetChildren() do
                            if v1.Name == "Fruits" then
                                for i2, v2 in v1:GetChildren() do
                                    a.Crops.Collect.send({v2})
                                    task.wait(0.5)
                                end
                            end
                        end
                    end
                end
            end)
        end
    end)
end)
local function calculateSpiralPosition(startPosition, index)
    local layer = math.ceil((math.sqrt(index) - 1) / 2)
    local layerStartIndex = (2 * layer - 1) ^ 2 + 1
    local offset = index - layerStartIndex
    local layerSize = layer * 2

    local x, z
    if offset < layerSize then
        x = layer
        z = -layer + offset
    elseif offset < layerSize * 2 then
        x = layer - (offset - layerSize)
        z = layer
    elseif offset < layerSize * 3 then
        x = -layer
        z = layer - (offset - layerSize * 2)
    else
        x = -layer + (offset - layerSize * 3)
        z = -layer
    end

    local distance = 1
    return startPosition + Vector3.new(x * distance, 0, z * distance)
end

local function moveToNextIndex(startPosition, startIndex, endIndex)
    local currentIndex = startIndex

    local function moveToPosition()
        if currentIndex > endIndex then
            return
        end

        local position = calculateSpiralPosition(startPosition, currentIndex)
        pcall(function()
            if haveegg() then
                local name = haveegg().Name
                equipweapon(name)

                local args = {"CreateEgg", position}

                if plr:DistanceFromCharacter(position) > 50 then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(position)
                end
                game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("PetEggService")
                    :FireServer(unpack(args))

                currentIndex = currentIndex + 1
                moveToPosition()
            end
        end)
    end

    moveToPosition()
end

local dataseed = require(game:GetService("ReplicatedStorage").Data.SeedData)
local v_u_1 = game:GetService("ReplicatedStorage")
game:GetService("TweenService")
local v_u_2 = game.Players.LocalPlayer.PlayerGui:WaitForChild("Seed_Shop")
local v_u_3 = require(v_u_1.Modules.GuiController)
local v_u_4 = require(v_u_1.Modules.DataService)
local v22 = v_u_4:GetData()
function getplace()
    for i, v in workspace.Farm:GetChildren() do
        if v.Name == "Farm" then
            if v:FindFirstChild("Important") and v.Important:FindFirstChild("Data") and
                v.Important.Data:FindFirstChild("Owner") and v.Important.Data:FindFirstChild("Owner").Value ==
                game.Players.LocalPlayer.Name then
                return v
            end
        end
    end
end
--[[

local args = {"Chocolate Sprinkler"}
game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyEventShopStock"):FireServer(unpack(args))
]]
spawn(function()
    pcall(function()
        while wait() do
            pcall(function()
                if getplace() and #getplace().Important.Plants_Physical:GetChildren() == 0 then
                    if not haveseed() and not startsell then
                        for i, v in v22.SeedStock.Stocks do
                            if v.Stock > 0 then
                                if i == "Carrot" then
                                    if game:GetService("Players").LocalPlayer.leaderstats.Sheckles.Value >=
                                        dataseed[i].Price then
                                        buyseed = true
                                        for i, v in getconnections(
                                            game:GetService("Players").LocalPlayer.PlayerGui.Teleport_UI.Frame.Seeds
                                                .Activated) do
                                            v.Function()
                                        end
                                        task.wait(1)
                                        repeat
                                            wait()

                                            local args = {i}
                                            game:GetService("ReplicatedStorage"):WaitForChild("GameEvents")
                                                :WaitForChild("BuySeedStock"):FireServer(unpack(args))
                                        until v.Stock <= 0 or
                                            game:GetService("Players").LocalPlayer.leaderstats.Sheckles.Value <
                                            dataseed[i].Price
                                        for i, v in getconnections(
                                            game:GetService("Players").LocalPlayer.PlayerGui.Teleport_UI.Frame.Garden
                                                .Activated) do
                                            v.Function()
                                        end
                                        task.wait(2)
                                    end
                                end
                            end
                        end
                        buyseed = false
                    end
                    if haveseed() then
                        for i, v in workspace.Farm:GetChildren() do
                            if v.Name == "Farm" then
                                if v:FindFirstChild("Important") and v.Important:FindFirstChild("Data") and
                                    v.Important.Data:FindFirstChild("Owner") and
                                    v.Important.Data:FindFirstChild("Owner").Value == game.Players.LocalPlayer.Name then
                                    for i1, v1 in v.Important.Plant_Locations:GetChildren() do
                                        if v1.Name == "Can_Plant" then
                                            local plantLocations = v1
                                            local isshit = haveseed()
                                            local name = isshit:GetAttribute("ItemName")
                                            local timeout = tick()
                                            local arguments = {
                                                [1] = plantLocations.Position,
                                                [2] = name
                                            }
                                            if plr:DistanceFromCharacter(plantLocations.Position) > 50 then
                                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                                    plantLocations.CFrame
                                            end
                                            isshit.Parent = plr.Character
                                            game.ReplicatedStorage.GameEvents.Plant_RE:FireServer(unpack(arguments))
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end)
        end
    end)
end)
spawn(function()
    pcall(function()
        while wait() do
            pcall(function()
                SetNewReason("Coins: " ..
                                 format(math.floor(game:GetService("Players").LocalPlayer.leaderstats.Sheckles.Value)))
            end)
        end
    end)
end)
function cnt(name)
    local cnt = 0
    if getplace() then
        for i, v in getplace().Important.Plants_Physical:GetChildren() do
            if v.Name == name then
                cnt = cnt + 1
            end
        end
        return cnt
    end
    return 0
end

spawn(function()
    pcall(function()
        while wait() do
            pcall(function()
                for i, v in v22.SeedStock.Stocks do
                    if v.Stock > 0 then
                        if getgenv().Config["Seed"][i] then
                            if cnt(i) < getgenv().Config["Seed"][i] and
                                game:GetService("Players").LocalPlayer.leaderstats.Sheckles.Value >= dataseed[i].Price then
                                buyseed = true

                                repeat
                                    wait()

                                    local args = {i}
                                    game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild(
                                        "BuySeedStock"):FireServer(unpack(args))
                                until v.Stock <= 0 or cnt(i) >= getgenv().Config["Seed"][i] or
                                    game:GetService("Players").LocalPlayer.leaderstats.Sheckles.Value <
                                    dataseed[i].Price
                            end
                        end
                    end
                end
                buyseed = false
            end)
        end
    end)
end)
local VirtualUser = game:GetService("VirtualUser")

spawn(function()
    pcall(function()
        while wait() do
            pcall(function()
                if not haveseed() then
                    if haveegg() and not startsell and not collect and not buyseed then
                        getgenv().noclip = false
                        for i, v in workspace.Farm:GetChildren() do
                            if v.Name == "Farm" then
                                if v:FindFirstChild("Important") and v.Important:FindFirstChild("Data") and
                                    v.Important.Data:FindFirstChild("Owner") and
                                    v.Important.Data:FindFirstChild("Owner").Value == game.Players.LocalPlayer.Name then
                                    for i1, v1 in v.Important.Plant_Locations:GetChildren() do
                                        if v1.Name == "Can_Plant" then
                                            local plantLocations = v1
                                            local isshit = haveegg()
                                            local name = isshit:GetAttribute("ItemName")
                                            local timeout = tick()
                                            moveToNextIndex(plantLocations.Position, 1, 100000)
                                        end
                                    end
                                end
                            end
                        end
                    else
                        getgenv().noclip = false
                    end
                end
            end)
        end
    end)
end)

spawn(function()
    pcall(function()
        while wait() do
            pcall(function()
                if haveseed() and not startsell and not collect and not buyseed then
                    getgenv().noclip = false
                    for i, v in workspace.Farm:GetChildren() do
                        if v.Name == "Farm" then
                            if v:FindFirstChild("Important") and v.Important:FindFirstChild("Data") and
                                v.Important.Data:FindFirstChild("Owner") and
                                v.Important.Data:FindFirstChild("Owner").Value == game.Players.LocalPlayer.Name then
                                for i1, v1 in v.Important.Plant_Locations:GetChildren() do
                                    if v1.Name == "Can_Plant" then
                                        local plantLocations = v1
                                        local isshit = haveseed()
                                        local name = isshit:GetAttribute("ItemName")
                                        local timeout = tick()
                                        local arguments = {
                                            [1] = plantLocations.Position,
                                            [2] = name
                                        }
                                        if plr:DistanceFromCharacter(plantLocations.Position) > 50 then
                                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                                plantLocations.CFrame
                                        end

                                        isshit.Parent = plr.Character
                                        game.ReplicatedStorage.GameEvents.Plant_RE:FireServer(unpack(arguments))
                                    end
                                end
                            end
                        end
                    end
                else
                    getgenv().noclip = false
                end
            end)
        end
    end)
end)
